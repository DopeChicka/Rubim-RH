{
	"auto_complete":
	{
		"selected_items":
		[
		]
	},
	"buffers":
	[
		{
			"file": "Rubim-RH/Rubim-RH.lua",
			"settings":
			{
				"buffer_size": 11610,
				"encoding": "UTF-8",
				"line_ending": "Windows"
			}
		},
		{
			"file": "Rubim-RH/Modules/Spells.lua",
			"settings":
			{
				"buffer_size": 31121,
				"encoding": "UTF-8",
				"line_ending": "Windows"
			}
		},
		{
			"file": "Rubim-RH/Rotations/PL/holy.lua",
			"settings":
			{
				"buffer_size": 5508,
				"line_ending": "Windows"
			}
		},
		{
			"contents": "--- Localize Vars\nlocal addonName, addonTable = ...;\n-- HeroLib\nlocal HL = HeroLib;\nlocal Cache = HeroCache;\nlocal Unit = HL.Unit;\nlocal Player = Unit.Player;\nlocal Target = Unit.Target;\nlocal Spell = HL.Spell;\nlocal Item = HL.Item;\n-- Lua\nlocal pairs = pairs;\nlocal RubimRH = LibStub(\"AceAddon-3.0\"):GetAddon(\"RubimRH\")\n\n--- APL Local Vars\nlocal S = RubimRH.Spell[70]\n\nS.BladeofJustice.TextureSpellID = { 0, 1394971 }\nS.AvengingWrath.TextureSpellID = { 55748 }\nS.Crusade.TextureSpellID = { 55748 }\n\nS.WakeofAshes.TextureSpellID = { 20594 } -- Stornform DWARF\nS.HammerofWrath.TextureSpellID = { 20549 } -- Warstomp TAUREN\nS.Inquisition.TextureSpellID = { 28730 } -- Arcane Torrent BLOOD ELF\n\n-- Items\nif not Item.Paladin then\n    Item.Paladin = {};\nend\nItem.Paladin.Retribution = {\n    -- Legendaries\n    JusticeGaze = Item(137065, { 1 }),\n    LiadrinsFuryUnleashed = Item(137048, { 11, 12 }),\n    WhisperoftheNathrezim = Item(137020, { 15 }),\n    AshesToDust = Item(144358, { 3 })\n}\nlocal I = Item.Paladin.Retribution;\n-- Rotation Var\n\n-- APL Action Lists (and Variables)\nlocal function Judged()\n    return Target:Debuff(S.JudgmentDebuff) or S.Judgment:CooldownRemains() > Player:GCD() * 2;\nend\n\nlocal T202PC, T204PC = HL.HasTier(\"T20\");\nlocal T212PC, T214PC = HL.HasTier(\"T21\");\n\nlocal function Cooldowns()\n    --actions.cooldowns=use_item,name=faulty_countermeasure,if=(buff.avenging_wrath.up|buff.crusade.up)\n    --actions.cooldowns+=/potion,if=(buff.bloodlust.react|buff.avenging_wrath.up|buff.crusade.up&buff.crusade.remains<25|target.time_to_die<=40)\n    --actions.cooldowns+=/lights_judgment,if=spell_targets.lights_judgment>=2|(!raid_event.adds.exists|raid_event.adds.in>75)\n    --actions.cooldowns+=/shield_of_vengeance\n    --actions.cooldowns+=/avenging_wrath,if=buff.inquisition.up|!talent.inquisition.enabled\n    --actions.cooldowns+=/crusade,if=holy_power>=4\n    if RubimRH.CDsON() and S.HolyWrath:IsCastable() then\n        return S.HolyWrath:Cast()\n    end\n    --actions.cooldowns+=/shield_of_vengeance\n    --actions.cooldowns+=/avenging_wrath,if=buff.inquisition.up|!talent.inquisition.enabled\n    if RubimRH.CDsON() and S.AvengingWrath:IsCastable() and (Player:Buff(S.Inquisition) or not S.Inquisition:IsAvailable()) then\n        return S.AvengingWrath:Cast()\n    end\n    --actions.cooldowns+=/crusade,if=holy_power>=4\n    if RubimRH.CDsON() and S.Crusade:IsCastable() and Player:HolyPower() >= 4 then\n        return S.Crusade:Cast()\n    end\nend\n\nlocal varDSCastable\nlocal function Finishers()\n    --MISSINGF AZERTIE STUFF\n    --actions.finishers=variable,name=ds_castable,value=spell_targets.divine_storm>=3|talent.divine_judgment.enabled&spell_targets.divine_storm>=2|azerite.divine_right.enabled&target.health.pct<=20&buff.divine_right.down\n    varDSCastable = Cache.EnemiesCount[8] >= 3 or S.DivineJudgement:IsAvailable() and Cache.EnemiesCount[8] >= 2\n\n    --actions.finishers+=/inquisition,if=buff.inquisition.down|buff.inquisition.remains<5&holy_power>=3|talent.execution_sentence.enabled&cooldown.execution_sentence.remains<10&buff.inquisition.remains<15|\n    --cooldown.avenging_wrath.remains<15&buff.inquisition.remains<20&holy_power>=3\n    if (S.Inquisition:IsAvailable() and S.Inquisition:IsReady()) and (not Player:Buff(S.Inquisition)\n            or Player:BuffRemains(S.Inquisition) < 5 and Player:HolyPower() >= 3\n            or S.ExecutionSentence:IsAvailable() and S.ExecutionSentence:CooldownRemains() < 10 and Player:BuffRemains(S.Inquisition) < 15 or S.AvengingWrath:CooldownRemains() < 15 and Player:BuffRemains(S.Inquisition) < 20 and Player:HolyPower() >= 3) then\n        return S.Inquisition:Cast()\n    end\n\n    --actions.finishers+=/execution_sentence,if=spell_targets.divine_storm<=3&(!talent.crusade.enabled|cooldown.crusade.remains>gcd*2)\n    if S.ExecutionSentence:IsReady(\"Melee\") and (Target:IsInRange(20) and Cache.EnemiesCount[8] <= 3 and ((not S.Crusade:IsAvailable() or S.Crusade:CooldownRemains() > Player:GCD() * 2) or not RubimRH.CDsON())) then\n        return S.ExecutionSentence:Cast()\n    end\n\n    --actions.finishers+=/divine_storm,if=variable.ds_castable&buff.divine_purpose.react\n    if S.DivineStorm:IsReady(\"Melee\") and varDSCastable and Player:Buff(S.DivinePurposeBuff) then\n        return S.DivineStorm:Cast()\n    end\n\n    --actions.finishers+=/divine_storm,if=variable.ds_castable&(!talent.crusade.enabled|cooldown.crusade.remains>gcd*2)\n    if S.DivineStorm:IsReady(\"Melee\") and (varDSCastable and ((not S.Crusade:IsAvailable() or S.Crusade:CooldownRemains() > Player:GCD() * 2) or not RubimRH.CDsON())) then\n        return S.DivineStorm:Cast()\n    end\n\n    --actions.finishers+=/templars_verdict,if=buff.divine_purpose.react&(!talent.execution_sentence.enabled|cooldown.execution_sentence.remains>gcd)\n    if S.TemplarsVerdict:IsReady(\"Melee\") and (Player:Buff(S.DivinePurposeBuff) and (not S.ExecutionSentence:IsAvailable() or S.ExecutionSentence:CooldownRemains() > Player:GCD())) then\n        return S.TemplarsVerdict:Cast()\n    end\n\n    --actions.finishers+=/templars_verdict,if=(!talent.crusade.enabled|cooldown.crusade.remains>gcd*2)&(!talent.execution_sentence.enabled|buff.crusade.up&buff.crusade.stack<10|cooldown.execution_sentence.remains>gcd*2)\n    if S.TemplarsVerdict:IsReady(\"Melee\") and ((not S.Crusade:IsAvailable() or S.Crusade:CooldownRemains() >= Player:GCD() * 2)\n            and (not S.ExecutionSentence:IsAvailable() or Player:Buff(S.Crusade) and Player:BuffStack(S.Crusade) < 10 or S.ExecutionSentence:CooldownRemains() > Player:GCD() * 2)) then\n        return S.TemplarsVerdict:Cast()\n    end\nend\n\nlocal HoW\nlocal function Generators()\n\n    --actions.generators = variable, name=HoW, value = (!talent.hammer_of_wrath.enabled|target.health.pct>=20&(buff.avenging_wrath.down|buff.crusade.down))\n    HoW = (not S.HammerofWrath:IsAvailable() or (Target:Exists() and Target:HealthPercentage() >= 20) and (not Player:Buff(S.AvengingWrath) or not Player:Buff(S.Crusade)))\n\n    --actions.generators+ = /call_action_list, name = finishers, if = holy_power>=5\n    if Player:HolyPower() >= 5 and Finishers() ~= nil then\n        return Finishers()\n    end\n\n    --actions.generators+ = /wake_of_ashes, if= (holy_power<=0|holy_power = 1&cooldown.blade_of_justice.remains>gcd)\n    if S.WakeofAshes:IsReady() and (Player:HolyPower() <= 0 or Player:HolyPower() == 1 and S.BladeofJustice:CooldownRemains() > Player:GCD()) then\n        return S.WakeofAshes:Cast()\n    end\n\n    --actions.generators+ =/blade_of_justice, if = holy_power<=2|(holy_power = 3&(cooldown.hammer_of_wrath.remains>gcd*2|variable.HoW))\n    if S.BladeofJustice:IsReady(\"Melee\") and (Player:HolyPower() <= 2 or (Player:HolyPower() == 3 and (S.HammerofWrath:CooldownRemains() > Player:GCD() * 2 or HoW))) then\n        return S.BladeofJustice:Cast()\n    end\n\n    --actions.generators+ = /judgment, if =holy_power<=2|(holy_power<=4&(cooldown.blade_of_justice.remains>gcd*2|variable.HoW))\n    if S.Judgment:IsReady(30) and (Player:HolyPower() <= 2 or (Player:HolyPower() <= 4 and (S.BladeofJustice:CooldownRemains() > Player:GCD() * 2 or HoW))) then\n        return S.Judgment:Cast()\n    end\n\n    --actions.generators+ =/hammer_of_wrath, if = holy_power<=4\n    if S.HammerofWrath:IsReady(\"Melee\") and Player:HolyPower() <= 4 then\n        return S.HammerofWrath:Cast()\n    end\n\n    --actions.generators+ = /consecration, if = holy_power<=2|holy_power<=3&cooldown.blade_of_justice.remains>gcd*2|holy_power = 4&cooldown.blade_of_justice.remains>gcd*2&cooldown.judgment.remains>gcd*2\n    if (S.Consecration:IsAvailable() and S.Consecration:IsReady() and RubimRH.lastMoved() > 0.2) and (Player:HolyPower() <= 2 or Player:HolyPower() <= 3 and S.BladeofJustice:CooldownRemains() > Player:GCD() * 2 or\n            Player:HolyPower() == 4 and S.BladeofJustice:CooldownRemains() > Player:GCD() * 2 and S.Judgment:CooldownRemains() > Player:GCD() * 2) then\n        return S.Consecration:Cast()\n    end\n\n    --actions.generators+ = /call_action_list, name = finishers, if = talent.hammer_of_wrath.enabled&(target.health.pct<=20|buff.avenging_wrath.up|buff.crusade.up)&(buff.divine_purpose.up|buff.crusade.stack<10)\n    if Finishers() ~= nil\n            and (S.HammerofWrath:IsAvailable()\n                and (((Target:Exists() and Target:HealthPercentage() <= 20) or Player:Buff(S.AvengingWrath) or Player:Buff(S.Crusade))\n                and (Player:Buff(S.DivinePurposeBuff)\n                or Player:BuffStack(S.Crusade) < 10))) then\n        return Finishers()\n    end\n\n    --actions.generators+= /crusader_strike, if = cooldown.crusader_strike.charges_fractional>=1.75&(holy_power<=2|holy_power<=3&cooldown.blade_of_justice.remains>gcd*2|holy_power = 4&cooldown.blade_of_justice.remains>gcd*2&\n    --cooldown.judgment.remains>gcd*2&cooldown.consecration.remains>gcd*2)\n    if S.CrusaderStrike:IsReady(\"Melee\") and (S.CrusaderStrike:ChargesFractional() >= 1.75 and\n            (Player:HolyPower() <= 2 or Player:HolyPower() <= 3 and S.BladeofJustice:CooldownRemains() > Player:GCD() * 2 or Player:HolyPower() == 4 and S.BladeofJustice:CooldownRemains() > Player:GCD() * 2)) then\n        return S.CrusaderStrike:Cast()\n    end\n\n    --actions.generators+ = /call_action_list, name = finishers\n    if Finishers() ~= nil then\n        return Finishers()\n    end\n\n    --actions.generators+ = /crusader_strike, if = holy_power<=4\n    if S.CrusaderStrike:IsReady(\"Melee\") and Player:HolyPower() <= 4 then\n        return S.CrusaderStrike:Cast()\n    end\n\n    --actions.generators+ = /arcane_torrent, if= (debuff.execution_sentence.up|(talent.hammer_of_wrath.enabled&(target.health.pct>=20|buff.avenging_wrath.down|buff.crusade.down))|!talent.execution_sentence.enabled|!talent.hammer_of_wrath.enabled)&holy_power<=4\nend\n\nlocal function Opener()\n    RubimRH.castSpellSequence = {\n        S.Judgment,\n        S.CrusaderStrike,\n        S.BladeofJustice\n    }\n    --actions.opener =  /sequence, if = talent.wake_of_ashes.enabled&talent.crusade.enabled&talent.execution_sentence.enabled&!talent.hammer_of_wrath.enabled,\n    --name = wake_opener_ES_CS:shield_of_vengeance:blade_of_justice:judgment:crusade:templars_verdict:wake_of_ashes:templars_verdict:crusader_strike:execution_sentence\n    if S.WakeofAshes:IsAvailable() and S.Crusade:IsAvailable() and S.ExecutionSentence:IsAvailable() and not S.HammerofWrath:IsAvailable() then\n        RubimRH.castSpellSequence = {\n            S.BladeofJustice,\n            S.Judgment,\n            S.Crusade,\n            S.TemplarsVerdict,\n            S.WakeofAshes,\n            S.TemplarsVerdict,\n            S.CrusaderStrike,\n            S.ExecutionSentence,\n        }\n    end\n\n    --actions.opener+ = /sequence, if = talent.wake_of_ashes.enabled&talent.crusade.enabled&!talent.execution_sentence.enabled&!talent.hammer_of_wrath.enabled,\n    --name = wake_opener_CS:shield_of_vengeance:blade_of_justice:judgment:crusade:templars_verdict:wake_of_ashes:templars_verdict:crusader_strike:templars_verdict\n    if S.WakeofAshes:IsAvailable() and S.Crusade:IsAvailable() and not S.ExecutionSentence:IsAvailable() and not S.HammerofWrath:IsAvailable() then\n        RubimRH.castSpellSequence = {\n            S.BladeofJustice,\n            S.Judgment,\n            S.Crusade,\n            S.TemplarsVerdict,\n            S.WakeofAshes,\n            S.TemplarsVerdict,\n            S.CrusaderStrike,\n            S.TemplarsVerdict,\n        }\n    end\n\n    --actions.opener+ = /sequence, if = talent.wake_of_ashes.enabled&talent.crusade.enabled&talent.execution_sentence.enabled&talent.hammer_of_wrath.enabled,\n    --name = wake_opener_ES_HoW:shield_of_vengeance:blade_of_justice:judgment:crusade:templars_verdict:wake_of_ashes:templars_verdict:hammer_of_wrath:execution_sentence\n    if S.WakeofAshes:IsAvailable() and S.Crusade:IsAvailable() and S.ExecutionSentence:IsAvailable() and S.HammerofWrath:IsAvailable() then\n        RubimRH.castSpellSequence = {\n            S.BladeofJustice,\n            S.Judgment,\n            S.Crusade,\n            S.TemplarsVerdict,\n            S.WakeofAshes,\n            S.TemplarsVerdict,\n            S.HammerofWrath,\n            S.ExecutionSentence,\n        }\n    end\n    --actions.opener+ = /sequence, if = talent.wake_of_ashes.enabled&talent.crusade.enabled&!talent.execution_sentence.enabled&talent.hammer_of_wrath.enabled,\n    --name = wake_opener_HoW:shield_of_vengeance:blade_of_justice:judgment:crusade:templars_verdict:wake_of_ashes:templars_verdict:hammer_of_wrath:templars_verdict\n    if S.WakeofAshes:IsAvailable() and S.Crusade:IsAvailable() and not S.ExecutionSentence:IsAvailable() and S.HammerofWrath:IsAvailable() then\n        RubimRH.castSpellSequence = {\n            S.BladeofJustice,\n            S.Judgment,\n            S.Crusade,\n            S.TemplarsVerdict,\n            S.WakeofAshes,\n            S.TemplarsVerdict,\n            S.HammerofWrath,\n            S.TemplarsVerdict,\n        }\n    end\n    --actions.opener+ = /sequence, if = talent.wake_of_ashes.enabled&talent.inquisition.enabled, n\n    --ame = wake_opener_Inq:shield_of_vengeance:blade_of_justice:judgment:inquisition:avenging_wrath:wake_of_ashes\n    if S.WakeofAshes:IsAvailable() and S.Inquisition:IsAvailable() then\n        RubimRH.castSpellSequence = {\n            S.BladeofJustice,\n            S.Judgment,\n            S.Inquisition,\n            S.AvengingWrath,\n            S.WakeofAshes,\n        }\n    end\n\n\n    if RubimRH.CastSequence() ~= nil and RubimRH.CastSequence():IsReady() then\n        return RubimRH.CastSequence():Cast()\n    end\nend\n\nlocal function APL()\n    --Area Enemies\n    HL.GetEnemies(\"Melee\");\n    HL.GetEnemies(8, true);\n    HL.GetEnemies(10, true);\n    HL.GetEnemies(20, true);\n\n    if not Player:AffectingCombat() then\n        return 0, 462338\n    end\n\n    if RubimRH.config.Spells[1].isActive and S.JusticarsVengeance:IsReady() and Target:IsInRange(\"Melee\") then\n        -- Divine Purpose\n        if Player:HealthPercentage() <= RubimRH.db.profile[70].justicarglory and Player:Buff(S.DivinePurposeBuff) then\n            return S.JusticarsVengeance:Cast()\n        end\n        -- Regular\n        if Player:HealthPercentage() <= RubimRH.db.profile[70].justicarglory - 5 and Player:HolyPower() >= 5 then\n            return S.JusticarsVengeance:Cast()\n        end\n    end\n\n    --    if RubimRH.config.Spells[1].isActive and S.WorldofGlory:IsReady() then\n    -- Divine Purpose\n    --        if Player:HealthPercentage() <= RubimRH.db.profile.Paladin.Retribution.justicarglory * 100 and Player:Buff(S.DivinePurposeBuff) then\n    --            return S.JusticarsVengeance:Cast()\n    --        end\n    --        -- Regular\n    --        if Player:HealthPercentage() <= RubimRH.db.profile.Paladin.Retribution.justicarglory * 100 - 5 and Player:HolyPower() >= 3 then\n    --            return S.JusticarsVengeance:Cast()\n    --        end\n    --    end\n\n    if RubimRH.config.Spells[2].isActive and S.FlashOfLight:IsReady() and Player:BuffStack(S.SelfLessHealerBuff) == 4 and RubimRH.db.profile.Paladin.Retribution.flashOfLightPercent then\n        return S.FlashOfLight:Cast()\n    end\n\n    --# Executed every time the actor is available.\n    --actions=auto_attack\n    --actions+=/rebuke\n    --actions+=/call_action_list,name=opener,if=time<2\n    if HL.CombatTime() < 2 and Opener~= nil and RubimRH.CDsON() then\n        return Opener()\n    end\n\n    --actions+=/call_action_list,name=cooldowns\n    if Cooldowns() ~= nil then\n        return Cooldowns()\n    end\n\n    --actions+=/call_action_list,name=generators\n    if Generators() ~= nil then\n        return Generators()\n    end\n    --Nothing to CAST\n    return 0, 975743\nend\nRubimRH.Rotation.SetAPL(70, APL);\n\nlocal function PASSIVE()\n    return RubimRH.Shared()\nend\n\nRubimRH.Rotation.SetPASSIVE(70, PASSIVE);\n\n--actions.finishers=variable,name=ds_castable,value=spell_targets.divine_storm>=3|talent.divine_judgment.enabled&spell_targets.divine_storm>=2|azerite.divine_right.enabled&target.health.pct<=20&buff.divine_right.down\n--actions.finishers+=/inquisition,if=buff.inquisition.down|buff.inquisition.remains<5&holy_power>=3|talent.execution_sentence.enabled&cooldown.execution_sentence.remains<10&buff.inquisition.remains<15|cooldown.avenging_wrath.remains<15&buff.inquisition.remains<20&holy_power>=3\n--actions.finishers+=/execution_sentence,if=spell_targets.divine_storm<=3&(!talent.crusade.enabled|cooldown.crusade.remains>gcd*2)\n--actions.finishers+=/divine_storm,if=variable.ds_castable&buff.divine_purpose.react\n--actions.finishers+=/divine_storm,if=variable.ds_castable&(!talent.crusade.enabled|cooldown.crusade.remains>gcd*2)\n--actions.finishers+=/templars_verdict,if=buff.divine_purpose.react&(!talent.execution_sentence.enabled|cooldown.execution_sentence.remains>gcd)\n--actions.finishers+=/templars_verdict,if=(!talent.crusade.enabled|cooldown.crusade.remains>gcd*2)&(!talent.execution_sentence.enabled|buff.crusade.up&buff.crusade.stack<10|cooldown.execution_sentence.remains>gcd*2)\n\n--actions.generators = variable, name=HoW, value = (!talent.hammer_of_wrath.enabled|target.health.pct>=20&(buff.avenging_wrath.down|buff.crusade.down))\n--actions.generators+ = /call_action_list, name = finishers, if = holy_power>=5\n--actions.generators+ = /wake_of_ashes, if= (!raid_event.adds.exists|raid_event.adds. in >20)&(holy_power<=0|holy_power = 1&cooldown.blade_of_justice.remains>gcd)\n--actions.generators+ =/blade_of_justice, if = holy_power<=2|(holy_power = 3&(cooldown.hammer_of_wrath.remains>gcd*2|variable.HoW))\n--actions.generators+ = /judgment, if =holy_power<=2|(holy_power<=4&(cooldown.blade_of_justice.remains>gcd*2|variable.HoW))\n--actions.generators+ =/hammer_of_wrath, if = holy_power<=4\n--actions.generators+ = /consecration, if = holy_power<=2|holy_power<=3&cooldown.blade_of_justice.remains>gcd*2|holy_power = 4&cooldown.blade_of_justice.remains>gcd*2&cooldown.judgment.remains>gcd*2\n--actions.generators+ = /call_action_list, name = finishers, if = talent.hammer_of_wrath.enabled&(target.health.pct<=20|buff.avenging_wrath.up|buff.crusade.up)&(buff.divine_purpose.up|buff.crusade.stack<10)\n--actions.generators+= /crusader_strike, if = cooldown.crusader_strike.charges_fractional>=1.75&(holy_power<=2|holy_power<=3&cooldown.blade_of_justice.remains>gcd*2|holy_power = 4&cooldown.blade_of_justice.remains>gcd*2&cooldown.judgment.remains>gcd*2&cooldown.consecration.remains>gcd*2)\n--actions.generators+ = /call_action_list, name = finishers\n--actions.generators+ = /crusader_strike, if = holy_power<=4\n--actions.generators+ = /arcane_torrent, if= (debuff.execution_sentence.up|(talent.hammer_of_wrath.enabled&(target.health.pct>=20|buff.avenging_wrath.down|buff.crusade.down))|!talent.execution_sentence.enabled|!talent.hammer_of_wrath.enabled)&holy_power<=4\n\n--actions.opener =  /sequence,   if = talent.wake_of_ashes.enabled&talent.crusade.enabled&talent.execution_sentence.enabled&!talent.hammer_of_wrath.enabled, name = wake_opener_ES_CS:shield_of_vengeance:blade_of_justice:judgment:crusade:templars_verdict:wake_of_ashes:templars_verdict:crusader_strike:execution_sentence\n--actions.opener+ = /sequence, if = talent.wake_of_ashes.enabled&talent.crusade.enabled&!talent.execution_sentence.enabled&!talent.hammer_of_wrath.enabled, name = wake_opener_CS:shield_of_vengeance:blade_of_justice:judgment:crusade:templars_verdict:wake_of_ashes:templars_verdict:crusader_strike:templars_verdict\n--actions.opener+ = /sequence, if = talent.wake_of_ashes.enabled&talent.crusade.enabled&talent.execution_sentence.enabled&talent.hammer_of_wrath.enabled, name = wake_opener_ES_HoW:shield_of_vengeance:blade_of_justice:judgment:crusade:templars_verdict:wake_of_ashes:templars_verdict:hammer_of_wrath:execution_sentence\n--actions.opener+ = /sequence, if = talent.wake_of_ashes.enabled&talent.crusade.enabled&!talent.execution_sentence.enabled&talent.hammer_of_wrath.enabled, name = wake_opener_HoW:shield_of_vengeance:blade_of_justice:judgment:crusade:templars_verdict:wake_of_ashes:templars_verdict:hammer_of_wrath:templars_verdict\n--actions.opener+ = /sequence, if = talent.wake_of_ashes.enabled&talent.inquisition.enabled, name = wake_opener_Inq:shield_of_vengeance:blade_of_justice:judgment:inquisition:avenging_wrath:wake_of_ashes\n",
			"file": "Rubim-RH/Rotations/PL/ret.lua",
			"file_size": 20518,
			"file_write_time": 131771080618709484,
			"settings":
			{
				"buffer_size": 20170,
				"encoding": "UTF-8",
				"line_ending": "Windows"
			}
		},
		{
			"file": "Rubim-RH/Modules/CustomBFA.lua",
			"settings":
			{
				"buffer_size": 4957,
				"line_ending": "Windows"
			}
		},
		{
			"file": "/F/World of Warcraft/Interface/Addons/HeroLib/Class/Spell/Main.lua",
			"settings":
			{
				"buffer_size": 7643,
				"line_ending": "Windows"
			}
		},
		{
			"file": "/F/World of Warcraft/Interface/Addons/HeroLib/Class/Unit/Aura.lua",
			"settings":
			{
				"buffer_size": 12731,
				"encoding": "UTF-8",
				"line_ending": "Windows"
			}
		},
		{
			"file": "/G/Rubim/WoWAPI/wow-api.lua",
			"settings":
			{
				"buffer_size": 197766,
				"line_ending": "Unix"
			}
		}
	],
	"build_system": "",
	"build_system_choices":
	[
	],
	"build_varint": "",
	"command_palette":
	{
		"height": 0.0,
		"last_filter": "",
		"selected_items":
		[
			[
				"Package Control: ",
				"Package Control: Install Package"
			],
			[
				"Package",
				"Package Control: List Packages"
			],
			[
				"Snippet: ",
				"Snippet: function"
			]
		],
		"width": 0.0
	},
	"console":
	{
		"height": 157.0,
		"history":
		[
			"Package",
			"import urllib.request,os,hashlib; h = '6f4c264a24d933ce70df5dedcf1dcaee' + 'ebe013ee18cced0ef93d5f746d80ef60'; pf = 'Package Control.sublime-package'; ipp = sublime.installed_packages_path(); urllib.request.install_opener( urllib.request.build_opener( urllib.request.ProxyHandler()) ); by = urllib.request.urlopen( 'http://packagecontrol.io/' + pf.replace(' ', '%20')).read(); dh = hashlib.sha256(by).hexdigest(); print('Error validating download (got %s instead of %s), please try manual install' % (dh, h)) if dh != h else open(os.path.join( ipp, pf), 'wb' ).write(by)"
		]
	},
	"distraction_free":
	{
		"menu_visible": true,
		"show_minimap": false,
		"show_open_files": false,
		"show_tabs": false,
		"side_bar_visible": false,
		"status_bar_visible": false
	},
	"expanded_folders":
	[
		"/G/Rubim/Rubim-RH/Rubim-RH",
		"/G/Rubim/Rubim-RH/Rubim-RH/Modules",
		"/G/Rubim/Rubim-RH/Rubim-RH/Rotations",
		"/G/Rubim/Rubim-RH/Rubim-RH/Rotations/PL",
		"/F/World of Warcraft/Interface/Addons/HeroLib",
		"/F/World of Warcraft/Interface/Addons/HeroLib/Class",
		"/F/World of Warcraft/Interface/Addons/HeroLib/Class/Unit"
	],
	"file_history":
	[
		"/G/Rubim/Rubim-RH/RubimRH.sublime-project",
		"/G/Rubim/WoWAPI/popular-libraries/LibStub.lua",
		"/F/World of Warcraft/Interface/Addons/Rubim-RH/Rubim-RH.lua"
	],
	"find":
	{
		"height": 27.0
	},
	"find_in_files":
	{
		"height": 0.0,
		"where_history":
		[
		]
	},
	"find_state":
	{
		"case_sensitive": false,
		"find_history":
		[
			"Stack"
		],
		"highlight": true,
		"in_selection": false,
		"preserve_case": false,
		"regex": false,
		"replace_history":
		[
		],
		"reverse": false,
		"show_context": true,
		"use_buffer2": true,
		"whole_word": false,
		"wrap": true
	},
	"groups":
	[
		{
			"selected": 3,
			"sheets":
			[
				{
					"buffer": 0,
					"file": "Rubim-RH/Rubim-RH.lua",
					"semi_transient": false,
					"settings":
					{
						"buffer_size": 11610,
						"regions":
						{
						},
						"selection":
						[
							[
								5338,
								5338
							]
						],
						"settings":
						{
							"syntax": "Packages/Lua/Lua.sublime-syntax",
							"tab_size": 4,
							"translate_tabs_to_spaces": true
						},
						"translation.x": 0.0,
						"translation.y": 3380.0,
						"zoom_level": 1.0
					},
					"stack_index": 1,
					"type": "text"
				},
				{
					"buffer": 1,
					"file": "Rubim-RH/Modules/Spells.lua",
					"semi_transient": false,
					"settings":
					{
						"buffer_size": 31121,
						"regions":
						{
						},
						"selection":
						[
							[
								15008,
								15008
							]
						],
						"settings":
						{
							"syntax": "Packages/Lua/Lua.sublime-syntax",
							"tab_size": 4,
							"translate_tabs_to_spaces": true
						},
						"translation.x": 0.0,
						"translation.y": 8900.0,
						"zoom_level": 1.0
					},
					"stack_index": 2,
					"type": "text"
				},
				{
					"buffer": 2,
					"file": "Rubim-RH/Rotations/PL/holy.lua",
					"semi_transient": false,
					"settings":
					{
						"buffer_size": 5508,
						"regions":
						{
						},
						"selection":
						[
							[
								0,
								0
							]
						],
						"settings":
						{
							"syntax": "Packages/Lua/Lua.sublime-syntax",
							"tab_size": 4,
							"translate_tabs_to_spaces": true
						},
						"translation.x": 0.0,
						"translation.y": 0.0,
						"zoom_level": 1.0
					},
					"stack_index": 6,
					"type": "text"
				},
				{
					"buffer": 3,
					"file": "Rubim-RH/Rotations/PL/ret.lua",
					"semi_transient": false,
					"settings":
					{
						"buffer_size": 20170,
						"regions":
						{
						},
						"selection":
						[
							[
								13506,
								13506
							]
						],
						"settings":
						{
							"syntax": "Packages/Lua/Lua.sublime-syntax",
							"tab_size": 4,
							"translate_tabs_to_spaces": true
						},
						"translation.x": 0.0,
						"translation.y": 4482.0,
						"zoom_level": 1.0
					},
					"stack_index": 0,
					"type": "text"
				},
				{
					"buffer": 4,
					"file": "Rubim-RH/Modules/CustomBFA.lua",
					"semi_transient": false,
					"settings":
					{
						"buffer_size": 4957,
						"regions":
						{
						},
						"selection":
						[
							[
								778,
								778
							]
						],
						"settings":
						{
							"syntax": "Packages/Lua/Lua.sublime-syntax",
							"tab_size": 4,
							"translate_tabs_to_spaces": true
						},
						"translation.x": 0.0,
						"translation.y": 924.0,
						"zoom_level": 1.0
					},
					"stack_index": 5,
					"type": "text"
				},
				{
					"buffer": 5,
					"file": "/F/World of Warcraft/Interface/Addons/HeroLib/Class/Spell/Main.lua",
					"semi_transient": false,
					"settings":
					{
						"buffer_size": 7643,
						"regions":
						{
						},
						"selection":
						[
							[
								1057,
								1061
							]
						],
						"settings":
						{
							"syntax": "Packages/Lua/Lua.sublime-syntax",
							"tab_size": 2,
							"translate_tabs_to_spaces": true
						},
						"translation.x": 0.0,
						"translation.y": 0.0,
						"zoom_level": 1.0
					},
					"stack_index": 4,
					"type": "text"
				},
				{
					"buffer": 6,
					"file": "/F/World of Warcraft/Interface/Addons/HeroLib/Class/Unit/Aura.lua",
					"semi_transient": false,
					"settings":
					{
						"buffer_size": 12731,
						"regions":
						{
						},
						"selection":
						[
							[
								3871,
								3871
							]
						],
						"settings":
						{
							"syntax": "Packages/Lua/Lua.sublime-syntax",
							"tab_size": 2,
							"translate_tabs_to_spaces": true
						},
						"translation.x": 0.0,
						"translation.y": 1870.0,
						"zoom_level": 1.0
					},
					"stack_index": 3,
					"type": "text"
				},
				{
					"buffer": 7,
					"file": "/G/Rubim/WoWAPI/wow-api.lua",
					"semi_transient": false,
					"settings":
					{
						"buffer_size": 197766,
						"regions":
						{
						},
						"selection":
						[
							[
								11512,
								11549
							]
						],
						"settings":
						{
							"syntax": "Packages/Lua/Lua.sublime-syntax"
						},
						"translation.x": 0.0,
						"translation.y": 12474.0,
						"zoom_level": 1.0
					},
					"stack_index": 7,
					"type": "text"
				}
			]
		}
	],
	"incremental_find":
	{
		"height": 27.0
	},
	"input":
	{
		"height": 0.0
	},
	"layout":
	{
		"cells":
		[
			[
				0,
				0,
				1,
				1
			]
		],
		"cols":
		[
			0.0,
			1.0
		],
		"rows":
		[
			0.0,
			1.0
		]
	},
	"menu_visible": true,
	"output.find_results":
	{
		"height": 0.0
	},
	"pinned_build_system": "",
	"project": "RubimRH.sublime-project",
	"replace":
	{
		"height": 50.0
	},
	"save_all_on_build": true,
	"select_file":
	{
		"height": 0.0,
		"last_filter": "",
		"selected_items":
		[
		],
		"width": 0.0
	},
	"select_project":
	{
		"height": 0.0,
		"last_filter": "",
		"selected_items":
		[
		],
		"width": 0.0
	},
	"select_symbol":
	{
		"height": 0.0,
		"last_filter": "",
		"selected_items":
		[
		],
		"width": 0.0
	},
	"selected_group": 0,
	"settings":
	{
	},
	"show_minimap": true,
	"show_open_files": false,
	"show_tabs": true,
	"side_bar_visible": true,
	"side_bar_width": 281.0,
	"status_bar_visible": true,
	"template_settings":
	{
	}
}
